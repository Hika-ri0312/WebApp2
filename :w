import React from 'react'
import { useState, useEffect, useContext,useCallback } from "react";
import { BrowserRouter, Link, Routes, Route, useParams, useLocation } from "react-router-dom";
// import { useRoute } from '@react-navigation/native'
import { getMonth } from "../util";
import { CalendarHeader } from "./CalendarHeader";
import { Month } from "./Month";
import GlobalContext from "../context/GlobalContext";
import EventModal from "./EventModal";
import axios from "axios";
import dayjs from "dayjs";



const Calendar = () => {
    const [currentMonth, setCurrentMonth] = useState(getMonth());
    const { monthIndex, showEventModal, daySelected, setShowEventModal, savedEvents, dispatchCalEvent, selectedEvent } = useContext(GlobalContext);
    const [req, setReq] = React.useState([]);
    const location = useLocation();
    const [uid, setUid] = useState();
    const [, updateState] = useState();
    const forceUpdate = useCallback(() => updateState({}), []);
    const wait = async (ms) => new Promise(resolve => setTimeout(resolve, ms));
    
    useEffect(() => {
        const uidCons = location.state.email;
        setUid(uidCons);
    },[])
    useEffect(() => {
        for (let i = 0; i < savedEvents.length; i++){
            const calendarEvent = {
                title: "",
                day: "",
                id: savedEvents[i].id,
                uid:"",
                dayTime:"",
            };
            const rows = req.map((ress,index) => {
                dispatchCalEvent({ type: "delete", payload: calendarEvent })
            });
        };
        getRequestSchedule()
    },[uid]);

    const getRequestSchedule = () =>{
        const host = process.env.REACT_APP_IP_ADDR
        const baseURL = "http://" + host + ":10180/calendar/get/";
        if (uid ==""){return}
        axios.post(baseURL, {"uid":uid})
            .then(res => {
                if(res.data['cont'].title == "bad"){
                    return
                }else{
                    setReq(res.data['cont'])
                }
            })
    }

    useEffect(() => {
        const rows = req.map((ress,index) => {
            dispatchCalEvent({ type: "push", payload: JSON.parse(JSON.stringify(ress)) })
        });
        setShowEventModal(false);
    }, [req]);

    useEffect(() => {
      setCurrentMonth(getMonth(monthIndex));
    }, [monthIndex]);

    useEffect(() => {
        if(savedEvents.length == 0){
            console.log(savedEvents)
            await wait(5000)
            forceUpdate()
        }
    }, [savedEvents]);

    return (
        <>
            {showEventModal && <EventModal email={uid}/>}
            <div className="h-screen flex flex-col">
                <CalendarHeader />
                <div className="flex flex-1">
                
                <Month month={currentMonth} />
                
                </div>
            </div>
            <div>
            <Link to="/">Home</Link>
            <br />

            <Link to="/login">login</Link>
        </div>
        </>
    );
}
export default Calendar;
