version: '2.12'
services:
    db:
        build: ./dockerfiles/db
        image: mysql
        container_name: "mysql"
        environment:
            MYSQL_ROOT_PASSWORD: ${ROOT_PASS}
            MYSQL_DATABASE: ${DB_NAME}
            MYSQL_USER: ${DB_USER}
            MYSQL_PASSWORD: ${DB_PASS}
            TZ: ${TZ}
        expose:
            - "3306"
        volumes:
          - ./dockerfiles/db/initdb.d:/docker-entrypoint-initdb.d
          - ./dockerfiles/db/mysql:/var/lib/mysql
          - ./dockerfiles/db/my.cnf:/etc/mysql/conf.d/my.cnf

    api:
        build: ./dockerfiles/api
        container_name: 'api'
        #restart: always
        tty: true
        volumes:
            - ./dockerfiles/api/src/:/root/src
        command: sh -c "/etc/init.d/cron restart && flask --debug run -h api -p 9000"
        expose:
            - "9000"
        depends_on:
          - db

    react_app:
        build: ./dockerfiles/react
        container_name: "react_app"
        #restart: always
        environment:
            IP_ADDR: ${IP_ADDR}
        volumes:
            - ./dockerfiles/react/src/:/usr/src/app
        command: /bin/sh -c "cat react-app/template_env | sed s/ip_address/`echo $IP_ADDR`/ > react-app/.env && cd react-app &&yarn install && yarn run start"
        ports:
          - 10280:10280

    nginx:
        build: ./dockerfiles/nginx
        container_name: "nginx"
        #restart: always
        ports:
          - 10180:80
        depends_on:
          - react_app
          - api
          - db
        environment:
            IP_ADDR: ${IP_ADDR}
        volumes:
            - ./dockerfiles/nginx/nginx.conf.template:/etc/nginx/nginx.conf.template
        command: /bin/sh -c "envsubst '$$IP_ADDR'< /etc/nginx/nginx.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

    express:
        build: ./dockerfiles/express #Dockerfileの親フォルダ
        container_name: "express-sql_login"
        tty: true
        environment:
            - NODE_ENV=DEVELOPMENT
            # - PORT=${DB_PORT}
            - EXPRESS_PORT=${EXPRESS_PORT}
            - DB_NAME=${DB_NAME}
            - DB_USER=${DB_USER}
            - DB_PASS=${DB_PASS}
            - DB_HOST=${DB_HOST}  
            - JWT_SECRET=${JWT_SECRET}
            - JWT_EXPIRES=${JWT_EXPIRES}
            - COOKIE_EXPIRES=${COOKIE_EXPIRES}
        volumes:
            - ./dockerfiles/express/:/usr/src/app/
        ports:
            - 18080:8080
        working_dir: /usr/src/app/src
        command: sh -c "npm install && npm install -g nodemon && nodemon"
        depends_on:
            - db
        links:
            - db:db

            



    
